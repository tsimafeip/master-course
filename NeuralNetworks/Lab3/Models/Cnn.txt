def build_cnn_model():
    sequence_input = Input(shape=(MAX_SEQUENCE_LENGTH,), dtype='int32')
    x = embedding_layer(sequence_input)
    x = SpatialDropout1D(0.2)(x)

    x = Conv1D(128, 5, activation='relu')(x)
    x = BatchNormalization()(x)
    x = GlobalMaxPooling1D()(x)

    x = Dense(256, activation='relu')(x)
    x = BatchNormalization()(x)
    x = Dropout(0.2)(x)

    preds = Dense(1, activation='sigmoid')(x)

    model = Model(sequence_input, preds)
    model.compile(loss='mean_squared_error',
                  optimizer='rmsprop',
                  metrics=['MAE'])
    return model